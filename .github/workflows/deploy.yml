name: Build & Deploy MCP Server

on:
  push:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/mcp-crypto-portfolio
  APP_PATH: /home/ec2-user/mcp-crypto-portfolio

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set image tag
        id: meta
        run: |
          if [[ "${{ github.ref_name }}" == "main" ]]; then
            echo "tag=main-${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
          else
            echo "tag=${{ github.ref_name }}-${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
          fi

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT || github.token }}

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image
        run: |
          docker build \
            -t $IMAGE_NAME:${{ steps.meta.outputs.tag }} \
            -t $IMAGE_NAME:latest \
            .

      - name: Push image
        run: |
          docker push $IMAGE_NAME:${{ steps.meta.outputs.tag }}
          docker push $IMAGE_NAME:latest

  deploy:
   needs: build
   runs-on: ubuntu-latest

   steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Debug workspace
      run: |
        pwd
        ls -la
        git status
        test -f docker-compose.yml && echo "compose OK" || (echo "compose missing" && exit 1)
        test -f nginx.conf && echo "nginx OK" || (echo "nginx missing" && exit 1)

    - name: Upload compose & nginx.conf to EC2
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        source: |
          docker-compose.yml
          nginx.conf
        target: /home/ubuntu/mcp-crypto-portfolio
        overwrite: true
        strip_components: 0

    - name: Ensure Docker & Compose on EC2
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          set -euxo pipefail
          if command -v apt-get >/dev/null 2>&1; then
            sudo apt-get update -y
            sudo apt-get install -y docker.io docker-compose-plugin
          else
            sudo dnf update -y || true
            sudo dnf install -y docker || true
            # optional legacy compose fallback
            if ! docker compose version >/dev/null 2>&1; then
              sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" \
                -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
              sudo ln -sf /usr/local/bin/docker-compose /usr/bin/docker-compose
            fi
          fi
          sudo systemctl enable --now docker
          mkdir -p /home/ubuntu/mcp-crypto-portfolio

    - name: Deploy on EC2 (login, pull image & restart)
      uses: appleboy/ssh-action@v1.0.3
      env:
        IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/mcp-crypto-portfolio
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          set -euxo pipefail
          cd /home/ubuntu/mcp-crypto-portfolio
          sudo systemctl start docker
          # login only if using a private GHCR package
          if [ -n "${{ secrets.GHCR_PULL_TOKEN || '' }}" ]; then
            echo "${{ secrets.GHCR_PULL_TOKEN }}" | sudo docker login ghcr.io \
              -u "${{ secrets.GHCR_PULL_USERNAME }}" --password-stdin
          fi
          export IMAGE_NAME="${IMAGE_NAME}"
          export TAG=latest
          if docker compose version >/dev/null 2>&1; then
            sudo -E docker compose pull
            sudo -E docker compose up -d
            sudo -E docker compose ps
          else
            sudo -E docker-compose pull
            sudo -E docker-compose up -d
            sudo -E docker-compose ps
          fi
          sudo docker image prune -f || true
